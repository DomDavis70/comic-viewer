AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to provision an EC2 instance, ALB, and Target Group

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow inbound HTTPS and SSH, and outbound on port 8000
      VpcId: vpc-0267b53c70218c6ad  # Replace with your VPC ID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: MyTargetGroup
      Port: 8000
      Protocol: HTTP
      TargetType: instance
      VpcId: vpc-0267b53c70218c6ad  # Replace with your VPC ID
      HealthCheckProtocol: HTTP
      HealthCheckPort: 8000
      HealthCheckPath: /health  # Example health check path, replace with your own

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: MyLoadBalancer
      Subnets: 
        - subnet-0ae2e0f883ab415a1 # Replace with your subnet IDs
        - subnet-0d7d6b92b835bd37d  # Replace with your subnet IDs
      SecurityGroups: 
        - !Ref MySecurityGroup
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      Tags:
        - Key: Name
          Value: MyLoadBalancer
      Type: application
      IpAddressType: ipv4

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08  # Specify SSL policy
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-2:469782703100:certificate/dd1ede9a-10c9-4156-a4dc-7bae62a88820  # Replace with your SSL certificate ARN

  MyListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: "443"
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref MySecurityGroup
      SubnetId: subnet-0ae2e0f883ab415a1  # Replace with your subnet ID
      KeyName: node-ec2-  # Replace with your EC2 key pair name
      ImageId: ami-0ca2e925753ca2fb4  # Replace with your AMI ID
      Tags:
        - Key: Name
          Value: MyEC2Instance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y nodejs npm git
          git clone https://github.com/DomDavis70/comic-viewer.git
          cd comic-viewer/backend
          npm install
          # Retrieve the API key from Parameter Store
          COMICVINE_API_KEY=$(aws ssm get-parameter --name "/MyApp/COMICVINE_API_KEY" --query "Parameter.Value" --output text)
          echo "COMICVINE_API_KEY=$COMICVINE_API_KEY" > .env
          npm start
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          SubnetId: subnet-0ae2e0f883ab415a1  # Replace with your subnet ID


Outputs:
  LoadBalancerDNSName:
    Description: "DNS name of the load balancer"
    Value: !GetAtt MyLoadBalancer.DNSName
