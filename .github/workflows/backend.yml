# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Backend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    defaults:
      run:
        working-directory: backend # The working directory path
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'

    - run: npm ci
    - run: npm run build --if-present

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build the Docker image
      run: docker build -t domdavis70/comic-backend:latest .
      env: # Define environment variables here
        COMICVINE_API_KEY: ${{ secrets.COMICVINE_API_KEY }}

    - name: Push the Docker image
      run: docker push domdavis70/comic-backend:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2  # Change to your desired region

    
    - run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 469782703100.dkr.ecr.us-east-2.amazonaws.com
    - run: docker tag domdavis70/comic-backend:latest 469782703100.dkr.ecr.us-east-2.amazonaws.com/comic-viewer:backend
    - run: docker push 469782703100.dkr.ecr.us-east-2.amazonaws.com/comic-viewer:backend

    # - name: Check if CloudFormation stack exists
    #   id: stack-check
    #   run: |
    #     set -e
    #     if aws cloudformation describe-stacks --stack-name my-stack-name; then
    #       echo "Stack exists" 
    #       echo "::set-output name=stack_exists::true"
    #     else
    #       echo "Stack does not exist"
    #       echo "::set-output name=stack_exists::false"
    #     fi

    # - name: Delete existing CloudFormation stack
    #   if: steps.stack-check.outputs.stack_exists == 'true'
    #   run: |
    #     aws cloudformation delete-stack --stack-name my-stack-name
    #     aws cloudformation wait stack-delete-complete --stack-name my-stack-name

    # - name: Deploy CloudFormation stack
    #   run: |
    #     aws cloudformation deploy \
    #       --template-file cloudformation-template.yaml \
    #       --stack-name my-stack-name \
    #       --capabilities CAPABILITY_NAMED_IAM
