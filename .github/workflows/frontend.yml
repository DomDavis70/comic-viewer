name: Frontend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - run: npm ci
    - run: npm run build --if-present

  test:
    defaults:
      run:
        working-directory: frontend
        
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

  docker_push:
    defaults:
      run:
        working-directory: frontend
        
    runs-on: ubuntu-latest

    needs: build

    steps:
    - name: Build the Docker image
      run: docker build -t domdavis70/comic-frontend:latest .
      env:
        REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push the Docker image
      run: docker push domdavis70/comic-frontend:latest

  ecr_push:
    defaults:
      run:
        working-directory: frontend
        
    runs-on: ubuntu-latest

    needs: docker_push

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 469782703100.dkr.ecr.us-east-2.amazonaws.com

    - run: docker tag domdavis70/comic-frontend:latest 469782703100.dkr.ecr.us-east-2.amazonaws.com/comic-viewer:frontend

    - run: docker push 469782703100.dkr.ecr.us-east-2.amazonaws.com/comic-viewer:frontend

  # Uncomment the following section when ready to deploy CloudFormation stack
  # deploy_cloudformation:
  #   defaults:
  #    run:
  #      working-directory: frontend
  #   runs-on: ubuntu-latest

  #   needs: ecr_push

  #   steps:
  #   - name: Configure AWS credentials
  #     uses: aws-actions/configure-aws-credentials@v2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       aws-region: us-east-2

  #   - name: Check if CloudFormation stack exists
  #     id: stack-check
  #     run: |
  #       set -e
  #       if aws cloudformation describe-stacks --stack-name frontendStack; then
  #         echo "Stack exists" 
  #         echo "::set-output name=stack_exists::true"
  #       else
  #         echo "Stack does not exist"
  #         echo "::set-output name=stack_exists::false"
  #       fi

  #   - name: Delete CloudFormation stack if exists
  #     if: steps.stack-check.outputs.stack_exists == 'true'
  #     run: |
  #       aws cloudformation delete-stack --stack-name frontendStack
  #       aws cloudformation wait stack-delete-complete --stack-name frontendStack

  #   - name: Deploy CloudFormation stack
  #     run: |
  #       aws cloudformation deploy \
  #         --region us-east-2 \
  #         --stack-name frontendStack \
  #         --template-file cloudformation-template.yaml \
  #         --capabilities CAPABILITY_NAMED_IAM
