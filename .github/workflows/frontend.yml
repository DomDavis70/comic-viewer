name: Frontend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    defaults:
      run:
        working-directory: frontend # The working directory path
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

    - name: Build the Docker image
      run: docker build -t domdavis70/comic-frontend:latest .
      env: # Define environment variables here
        REACT_APP_API_KEY: ${{ secrets.REACT_APP_API_KEY }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Push the Docker image
      run: docker push domdavis70/comic-frontend:latest

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-2  # Change to your desired region

    # - name: Check if CloudFormation stack exists
    #   id: stack-check
    #   run: |
    #     set -e
    #     if aws cloudformation describe-stacks --stack-name frontendStack; then
    #       echo "Stack exists" 
    #       echo "::set-output name=stack_exists::true"
    #     else
    #       echo "Stack does not exist"
    #       echo "::set-output name=stack_exists::false"
    #     fi

    # - name: Delete CloudFormation stack if exists
    #   if: steps.stack-check.outputs.stack_exists == 'true'
    #   run: |
    #     aws cloudformation delete-stack --stack-name frontendStack
    #     aws cloudformation wait stack-delete-complete --stack-name frontendStack

    # - name: Deploy CloudFormation stack
    #   env:
    #     AWS_REGION: us-east-2
    #     STACK_NAME: frontendStack
    #     TEMPLATE_FILE: cloudformation-template.yaml
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: |
    #     aws cloudformation deploy \
    #       --region $AWS_REGION \
    #       --stack-name $STACK_NAME \
    #       --template-file $TEMPLATE_FILE \
    #       --capabilities CAPABILITY_NAMED_IAM

    # - name: Build React app
    #   run: npm run build

    # - name: Deploy to S3
    #   env:
    #     S3_BUCKET: ${{ secrets.S3_BUCKET }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #   run: |
    #     aws s3 sync build/ s3://$S3_BUCKET/ --delete
